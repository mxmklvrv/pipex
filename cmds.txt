valgrind ./pipex Makefile /usr/bin/ls /usr/bin/cat t1_output
echo $?
< Makefile /usr/bin/ls | /usr/bin/cat > t1_output
echo $?
# Expected: STDOUT = ls output | STDERR = none | EXIT = 0

valgrind ./pipex Makefile "/usr/bin/tail -n15" "/usr/bin/head -n6" t1_output
echo $?
< Makefile /usr/bin/tail -n15 | /usr/bin/head -n6 > t1_output
# Expected: lines 6 of last 15 | EXIT = 0

valgrind ./pipex Makefile /usr/bin/lsoip /usr/bin/cati outf
echo $?
< Makefile /usr/bin/lsoip | /usr/bin/cati > outf
# Expected: STDERR = cmd not found | EXIT = 127

valgrind ./pipex Makefile "touch OUI" /usr/bin/cati outf
echo $?
< Makefile touch OUI | /usr/bin/cati > outf
# Expected: STDERR = /usr/bin/cati not found | EXIT = 127

valgrind ./pipex Makefile /usr/bin/cati "touch OUI" outf
echo $?
< Makefile /usr/bin/cati | touch OUI > outf
# Expected: STDERR = /usr/bin/cati not found | EXIT = 0

valgrind ./pipex Makefile lsoip cati outf
echo $?
<Makefile lsoip | cati > outf
# Expected: both commands not found | EXIT = 127

valgrind ./pipex Makefile "touch OUI" cati outf
echo $?
<Makefile touch OUI | cati > outf
# Expected: cati not found | EXIT = 127

valgrind ./pipex Makefile cati "touch OUI" outf
echo $?
<Makefile cati | touch OUI > outf
# Expected: cati not found | EXIT = 0

valgrind ./pipex Makefile " " " " outf
echo $?
<Makefile   |   > outf
# Expected: command not found | EXIT = 127

valgrind ./pipex Makefile "touch OUI" " " outf
echo $?
<Makefile touch OUI |   > outf
# Expected: second command not found | EXIT = 127

valgrind ./pipex Makefile " " "touch OUI" outf
echo $?
<Makefile   | touch OUI > outf
# Expected: first command not found | EXIT = 0

valgrind ./pipex infile_r "touch truc" "touch truc2" t1_output
echo $?
<infile_r touch truc | touch truc2 > t1_output
# Expected: permission issue or empty | EXIT = 0

valgrind ./pipex infile_no_r "touch NON" "touch OUI" t2_output
echo $?
<infile_no_r touch NON | touch OUI > t2_output
# Expected: permission denied | EXIT = 0

valgrind ./pipex infile_no_r lsop "echo yo" t2_output
echo $?
<infile_no_r lsop | echo yo > t2_output
# Expected: lsop not found | EXIT = 0

valgrind ./pipex Makefile "touch truc" "touch truc2" outfile_w
echo $?
<Makefile touch truc | touch truc2 > outfile_w
# Expected: no error | EXIT = 0

valgrind ./pipex Makefile "touch OUI" "touch NON" outfile_no_w
echo $?
<Makefile touch OUI | touch NON > outfile_no_w
# Expected: permission denied | EXIT = 1

valgrind ./pipex Makefile "touch OUI" lsop outfile_no_w
echo $?
<Makefile touch OUI | lsop > outfile_no_w
# Expected: lsop not found, permission denied | EXIT = 1

valgrind ./pipex Makefile cat ls outf
echo $?
<Makefile cat | ls > outf
# Expected: ls output | EXIT = 0

valgrind ./pipex Makefile ls cat outf
echo $?
<Makefile ls | cat > outf
# Expected: ls piped into cat | EXIT = 0

valgrind ./pipex Makefile yes "echo yo" outf
echo $?
<Makefile yes | echo yo > outf
# Expected: only "yo" in output | EXIT = 0

valgrind ./pipex Makefile "sleep 2" "sleep 1" outf
echo $?
<Makefile sleep 2 | sleep 1 > outf
# Expected: delay, no output | EXIT = 0

valgrind ./pipex Makefile yes cati outf
echo $?
<Makefile yes | cati > outf
# Expected: cati not found | EXIT = 127

valgrind ./pipex Makefile yes cati outfile_no_w
echo $?
< Makefile yes | cati > outfile_no_w
# Expected: permission denied | EXIT = 1

valgrind ./pipex Makefile ./a.out cat outf
echo $?
< Makefile ./a.out | cat > outf
# Expected: output of a.out piped | EXIT = 0

valgrind ./pipex Makefile ls ./ls outf
echo $?
< Makefile ls | ./ls > outf
# Expected: ls output | EXIT = 0

valgrind ./pipex Makefile date dir1/dir2/ls outf
echo $?
< Makefile date | dir1/dir2/ls > outf
# Expected: likely error (dir1/dir2/ls may not exist) | EXIT = 0 if no error

valgrind ./pipex Makefile ls ./a.out outf
echo $?
< Makefile ls | ./a.out > outf
# Expected: permission denied | EXIT = 126

env -i valgrind ./pipex Makefile cat ls outf
echo $?
env -i sh -c '< Makefile cat | ls > outf'
# Expected: cat not found due to env | EXIT = 127

env -i valgrind ./pipex Makefile /usr/bin/cat /usr/bin/cat outf
echo $?
env -i sh -c '< Makefile /usr/bin/cat | /usr/bin/cat > outf'
# Expected: Makefile content piped | EXIT = 0

unset PATH && valgrind ./pipex Makefile cat ls outf
echo $?
PATH= sh -c '< Makefile cat | ls > outf'
# Expected: commands not found | EXIT = 127

unset PATH && valgrind ./pipex Makefile /usr/bin/cat /usr/bin/cat outf
echo $?
PATH= sh -c '< Makefile /usr/bin/cat | /usr/bin/cat > outf'
# Expected: works without PATH due to full path | EXIT = 0