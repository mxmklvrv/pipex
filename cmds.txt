Absolut path cmd:
Test 1 : ./pipex Makefile /usr/bin/ls /usr/bin/cat t1_output 			--> OK (return status == 0)
Test 2 : ./pipex Makefile "/usr/bin/tail -n15" "/usr/bin/head -n6" t1_output	--> OK (return status == 0)
Absolut path cmd not found:
Test 1 : ./pipex Makefile /usr/bin/lsoip /usr/bin/cati outf 		--> OK Stderr: output. Stdout: no output. (err msg) (return status == 127)
Test 2 : ./pipex Makefile "touch OUI" /usr/bin/cati outf 		--> OK. (err msg ok) (return status == 127)
Test 3 : ./pipex Makefile /usr/bin/cati "touch OUI" outf 		--> OK. (err msg ok) (return status == 0)
Cmd not found:
Test 1 : ./pipex Makefile lsoip cati outf 				--> OK Stderr: output. Stdout: no output. (err msg) (return status == 127)
Test 2 : ./pipex Makefile "touch OUI" cati outf 			--> OK. (err msg) (return status == 127)
Test 3 : ./pipex Makefile cati "touch OUI" outf 			--> OK. (err msg) (return status == 0)
Empty cmd:
Test 1 : ./pipex Makefile " " " " outf 					--> OK Stderr: output. Stdout: no output. (not 2 err msg with "Command not found") (return status == 127)
Test 2 : ./pipex Makefile "touch OUI" " " outf 				--> OK. (err msg) (return status == 127)
Test 3 : ./pipex Makefile " " "touch OUI" outf 				--> OK. (err msg) (return status == 0)
Infile no readable:
Test 1 : ./pipex infile_r "touch truc" "touch truc2" t1_output		--> OK. (return status == 0)
Test 2 : ./pipex infile_no_r "touch NON" "touch OUI" t2_output		--> OK. (err msg) (return status == 0)
Test 3 : ./pipex infile_no_r lsop "echo yo" t2_output			--> OK. (err msg) (return status == 0)
Outfile no writable:
Test 1 : ./pipex Makefile "touch truc" "touch truc2" outfile_w 		--> OK. (return status == 0)
Test 2 : ./pipex Makefile "touch OUI" "touch NON" outfile_no_w 		--> OK. (err msg) (return status == 1)
Test 3 : ./pipex Makefile "touch OUI" lsop outfile_no_w 		--> OK. (err msg) (return status == 1)
Outfile created before exec:
Test 1 : ./pipex Makefile cat ls outf 					--> OK
Test 2 : ./pipex Makefile ls cat outf 					--> OK
Concurrency of cmds:
Test 1 : ./pipex Makefile yes "echo yo" outf 				--> OK (return status == 0)
Test 2 : ./pipex Makefile "sleep 2" "sleep 1" outf 			--> OK (return status == 0)
Test 3 : ./pipex Makefile yes cati outf 				--> (err msg Cmd not found ok) (return status == 127)
Test 4 : ./pipex Makefile yes cati outfile_no_w 			--> (err msg Perm denied ok) (return status == 1)
Custom exec:
Test 1 : ./pipex Makefile ./a.out cat outf 				--> OK (return status == 0)
Test 2 : ./pipex Makefile ls ./ls outf 					--> OK (return status == 0)
Test 3 : ./pipex Makefile date dir1/dir2/ls outf			--> OK (return status == 0) 
Test 4 : ./pipex Makefile ls ./a.out (chmod u-x) outf 			--> OK (code 126 bien ouej) (err msg permission denied)
Empty environnement:
Test 1 : env -i ./pipex Makefile cat ls outf 				--> (return status == 127)
Test 2 : env -i ./pipex Makefile /usr/bin/cat /usr/bin/cat outf		--> OK (return status == 0)
$PATH unset:
Test 1 : unset PATH && ./pipex Makefile cat ls outf 			--> (return status == 127)
Test 2 : unset PATH && ./pipex Makefile /usr/bin/cat /usr/bin/cat outf 	--> OK (return status == 0)
Leaks via valgrind:
Test 1 : valgrind ./pipex Makefile cat cat outf 			--> no leak cat - no leak cat - no leak main - no extra fd (main+child) - no extra fd on main
Test 2 : valgrind ./pipex Makefile yes head outf 			--> 12,252 leaks yes (it's ok) - no leak head - no leak main - no extra fd (main+child) - no extra fd on main
Test 3 : valgrind ./pipex Makefile /usr/bin/cat /usr/bin/head outf 	--> no leak cat - no leak head - no leak main - no extra fd (main+child) - no extra fd on main
Test 4 : valgrind ./pipex infile_no_r cat "echo yo" outfile_no_w 	--> no leak cat - no leak echo - no leak main - no extra fd (main+child) - no extra fd on main
Test 5 : valgrind ./pipex Makefile catiop " " outf 			--> no leak catiop - no leak empty cmd - no leak main - no extra fd (main+child) - no extra fd on main
Test 6 : valgrind ./pipex Makefile ./a.out (chmod u-x) "echo yo" outf 	--> no leak a.out - no leak echo - no leak main - no extra fd (main+child) - no extra fd on main

